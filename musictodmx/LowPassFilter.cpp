#include "LowPassFilter.h"

static double filter_taps[LOWPASSFILTER_TAP_NUM] = {
 0.005614574545073502,
  0.0014917970536430865,
  0.0013857561908799203,
  0.001027417770603512,
  0.0003748732534859232,
  -0.0005956818401138492,
  -0.0018965408717360043,
  -0.0035211754814098856,
  -0.005439111403115089,
  -0.007593858137076186,
  -0.009903336193809299,
  -0.012261955996047057,
  -0.014543755210565966,
  -0.016606487108664685,
  -0.01829691787249721,
  -0.01945760849380376,
  -0.01993513480178357,
  -0.019589243855684037,
  -0.018302117192545996,
  -0.01598686831849172,
  -0.012594619488147113,
  -0.008119815940936961,
  -0.002603657315571822,
  0.0038644343736149445,
  0.011147481985889073,
  0.019064006638802054,
  0.027393654274441907,
  0.03588534404512164,
  0.04426755865541752,
  0.05226011932096727,
  0.059586667900898026,
  0.06598712552726556,
  0.07122952878960928,
  0.07512075244924477,
  0.07751565277597525,
  0.07832413531539857,
  0.07751565277597525,
  0.07512075244924477,
  0.07122952878960928,
  0.06598712552726556,
  0.059586667900898026,
  0.05226011932096727,
  0.04426755865541752,
  0.03588534404512164,
  0.027393654274441907,
  0.019064006638802054,
  0.011147481985889073,
  0.0038644343736149445,
  -0.002603657315571822,
  -0.008119815940936961,
  -0.012594619488147113,
  -0.01598686831849172,
  -0.018302117192545996,
  -0.019589243855684037,
  -0.01993513480178357,
  -0.01945760849380376,
  -0.01829691787249721,
  -0.016606487108664685,
  -0.014543755210565966,
  -0.012261955996047057,
  -0.009903336193809299,
  -0.007593858137076186,
  -0.005439111403115089,
  -0.0035211754814098856,
  -0.0018965408717360043,
  -0.0005956818401138492,
  0.0003748732534859232,
  0.001027417770603512,
  0.0013857561908799203,
  0.0014917970536430865,
  0.005614574545073502
};

void LowPassFilter_init(LowPassFilter* f) {
  int i;
  for(i = 0; i < LOWPASSFILTER_TAP_NUM; ++i)
    f->history[i] = 0;
  f->last_index = 0;
}

void LowPassFilter_put(LowPassFilter* f, double input) {
  f->history[f->last_index++] = input;
  if(f->last_index == LOWPASSFILTER_TAP_NUM)
    f->last_index = 0;
}

double LowPassFilter_get(LowPassFilter* f) {
  double acc = 0;
  int index = f->last_index, i;
  for(i = 0; i < LOWPASSFILTER_TAP_NUM; ++i) {
    index = index != 0 ? index-1 : LOWPASSFILTER_TAP_NUM-1;
    acc += f->history[index] * filter_taps[i];
  };
  return acc;
}
